! ATTENTION ! Ne fonctionne pas correctement sur cygwin : faire cet exercice sur FreeBSD (voir freeBSD.txt)

cd shell00		// navigue vers le répertoire parent
mkdir ex02		// créée le dossier ex02
cd ex02			// navigue vers le répertoire ex02

mkdir test0 		// crée le répertoire test0 (d : directory (répertoire))
chmod 715 test0		// rwx --x r-x = 111 001 101 = 7 1 5

vim test1		// crée le fichier test1 et l'ouvre avec vim (le 1er tiret indique que test1 est un fichier)
i			// entre dans le mode insertion de vim
space x3		// pour 4 ; insère 3 espaces dans le fichier (pour que le fichier fasse 4 bits en taille (3 + 1) (1,4 doit être indiqué)
echap			// sort du mode insertion de vim
:wq			// commande pour sauvegarder et quitter vim
enter			// valider la commande
chmod 714 test1		// rwx --x r-- = 111 001 100 = 7 1 4

mkdir test2 		// crée le répertoire test2 (d : directory (répertoire))
chmod 504 test2		// r-x --- r-- = 101 000 100 = 5 0 4

vim test3		// crée le fichier test3 et l'ouvre avec vim (le 1er tiret indique que test3 est un fichier)
i			// entre dans le mode insertion de vim
space			// insère un espace
backspace		// puis le supprime ; pour que le fichier fasse 1 bit en taille (1,1 doit être indiqué)
echap			// sort du mode insertion de vim
:wq			// commande pour sauvegarder et quitter vim
enter			// valider la commande
chmod 404 test3		// r-- --- r-- = 100 000 100 = 4 0 4

ln test3 test5		// ln : link ; crée un lien entre 2 fichiers ; pour 2 avant XX (pour test3 et test5) ; crée un lien matériel (hard link) vers le fichier 3 nommé test5

			// hard link (lien matériel) : crée une nouvelle entrée d'index dans le système de fichier pour pointer vers le même contenu que le fichier cible
			// ne peut pas pointer sur des systèmes de fichiers différents
			// si le fichier cible est supprimé, le lien matériel reste intact tant que d'autres liens pointent toujours vers le contenu

vim test4		// crée le fichier test4 et l'ouvre avec vim (le 1er tiret indique que test4 est un fichier)
i			// entre dans le mode insertion de vim
space x1		// pour 2 ; insère 1 espace dans le fichier (pour que le fichier fasse 2 bits en taille) (1,2 doit être indiqué)
echap			// sort du mode insertion de vim
:wq			// commande pour sauvegarder et quitter vim
enter			// valider la commande
chmod 641 test4		// rw- r-- --x = 110 100 001 = 6 4 1

ln -s test0 test6	// ln : link ; crée un lien entre 2 fichiers (le 1er l indique que test6 est un lien symbolique ; option -s : symbolic ;
			// crée un lien symbolique au lieu d'un lien matériel (hard link) ;

			// lien symbolique : fonctionne comme un raccourci vers le fichier cible, peut pointer sur des systèmes de fichiers différents, et si le fichier cible 				// est supprimé, le lien symbolique est rompu

			// test6 -> test0 signifie que le lien vers le fichier test0 est nommé test6 : ln -s test0 test6 créée donc un lien symbolique nommé test6 vers le 				// répertoire test0

ls -l			//  ls : list ; liste les fichiers du répertoire courant (option -l : long listing format (liste détaillée))
tar -cf exo2.tar * 	// compresse tout le contenu du répertoire courant (* : wildcard) dans un fichier exo2.tar (-c : create (crée l'archive) ; -f exo2.tar : (-f : regular 				// file + nom de l'archive) : spécifie le nom de l'archive à créer)
rm test1 test3 test4 test5 test6 // rm : remove ; supprimer les fichiers test1, test3, test4, test5 et test6 (car le dossier de rendu ne doit contenir que le fichier spécifié 					 // dans la fiche d'exercice)
rmdir test0 test2	// rmdir : remove directory ; supprimer les dossiers test0 et test2